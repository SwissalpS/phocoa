<?xml version="1.0"?> 
<!-- NOTE:: All paths should leave off trailing slash!!! -->
<project name="phocoa" default="newproject">
    <!-- Set up tasks -->
    <!-- taskdef name="build-pear-package" classname="tasks.BuildPearPackage" /-->
    <taskdef name="realpathexpandhome" classname="tasks.RealPathExpandHome" />
    <taskdef name="symlink" classname="tasks.SymLink" />
    <taskdef name="writeconffile" classname="tasks.WriteConfFile" />
    <taskdef name="selectExecutable" classname="tasks.SelectExecutable" />

    <!-- Targets -->
    <target name="prepareGeneral" description="General setup for all modes.">
        <echo message="PHOCOA framework base dir at: ${phocoa.dir}" />
    </target>

    <target name="prepareProject" description="Pre-flight for working on a PHOCOA project. Loads build.properties file." depends="prepareGeneral">
        <php expression="$_ENV['_']" returnProperty="phocoa.project.php" />
        <if>
            <equals arg1="${phocoa.project.dir}" arg2="" />
            <then>
                <fail message="Project dir must be defined to run project tasks. CD into the project and try again, or use -Dphocoa.project.dir=." />
            </then>
        </if>
        <echo message="PHOCOA project dir at: ${phocoa.project.dir}" />
        <realpathexpandhome propertyName="phocoa.project.container" file="${phocoa.project.dir}/.."/>
        <echo message="PHOCOA project container dir at: ${phocoa.project.container}" />
        <!-- attempt to load information from a file -->
        <property file="${phocoa.project.dir}/conf/build.properties" />
    </target>

    <!-- phocoa project helper tasks -->
    <target name="createModule" description="Create a new phocoa module in the project." depends="prepareProject">
        <input propertyname="module.name">Module name:</input>
        <input propertyname="module.defaultPage">Default page [blank for none]:</input>
        <exec dir="${phocoa.pwd}" command="${phocoa.project.php} ${phocoa.dir}/framework/createModule.php ${module.name} ${module.defaultPage}" passthru="true" />
    </target>

    <target name="createPage" description="Create a new phocoa page in the current module." depends="prepareProject">
        <input propertyname="page.name">Page Name:</input>
        <exec dir="${phocoa.pwd}" command="${phocoa.project.php} ${phocoa.dir}/framework/createPage.php ${page.name}" passthru="true" />
    </target>

    <target name="createSkeletonFromPropel" description="Create a skeleton module for editing a table from Propel." depends="prepareProject">
        <input propertyname="db.name" defaultValue="${phocoa.project.name}">Database Name:</input>
        <input propertyname="db.table">Table Name:</input>
        <input propertyname="db.column">Column name of single column that best describes the table:</input>
        <input propertyname="db.module" defaultValue="${db.table}">Module Name:</input>
        <php expression="require('${phocoa.project.dir}/conf/webapp.conf')" />
        <exec dir="${phocoa.pwd}" command="${phocoa.project.php} ${phocoa.dir}/framework/createModule.php ${db.module}" passthru="true" />
        <exec dir="${phocoa.pwd}/${db.module}" command="${phocoa.project.php} ${phocoa.dir}/framework/createSkeletonFromPropel.php --phocoaConfFile=${phocoa.project.dir}/conf/webapp.conf --propelOutputDir=${phocoa.project.dir}/classes --propelConfFile=${phocoa.project.dir}/conf/${phocoa.project.name}-conf.php --databaseName=${db.name} --tableName=${db.table} --columnName=${db.column} --pageType=search,edit,detail" passthru="true" />
    </target>

    <target name="shell" description="Start an interactive PHP shell bootstrapped to the current PHOCOA project." depends="prepareProject">
        <php expression="passthru('${phocoa.project.php} ${phocoa.dir}/framework/util/shell.php')" />
    </target>

    <!-- phocoa propel integration tasks -->
    <target name="addpropel" description="Add propel support to this project." depends="prepareProject">
        <property userProperty="true" name="phocoa.propel.dir" value="${phocoa.project.dir}/propel-build" />
        <echo message="Setting up PHOCOA project for Propel in dir: ${phocoa.propel.dir}" />
        <selectExecutable name="propel-gen" propertyName="propel.bin.propel-gen" />
        <mkdir dir="${phocoa.propel.dir}" />
        <input propertyname="propel.database" validArgs="pgsql,mysql,mssql,sqllite,ldap">Enter the database type:</input>
        <input propertyname="db.name">Enter the database name:</input>
        <input propertyname="db.user">Enter the database username:</input>
        <input propertyname="db.pass">Enter the database password:</input>
        <input propertyname="db.host" defaultValue="localhost">Enter the database host:</input>
        <property userProperty="true" name="propel.project" value="${phocoa.project.name}" />
        <property userProperty="true" name="propel.database.url" value="${propel.database}://${db.user}:${db.pass}@${db.host}/${db.name}" />
        <property userProperty="true" name="propel.targetPackage" value="${db.name}" />
        <property userProperty="true" name="propel.autoloadCoreClasses" value="1" />
        <property userProperty="true" name="propel.autoloadGeneratedClasses" value="1" />
        <property userProperty="true" name="propel.output.dir" value="${phocoa.propel.dir}" />
        <property userProperty="true" name="propel.php.dir" value="${phocoa.project.dir}/classes" />
        <property userProperty="true" name="propel.phpconf.dir" value="${phocoa.project.dir}/conf" />
        <property userProperty="true" name="propel.sql.dir" value="${phocoa.propel.dir}/db/sql" />
        <writeconffile namespace="propel" file="${phocoa.propel.dir}/build.properties" />
        <echo message="Building Propel... setup conf file, reverse engineer database, build db classes." />
        <copy file="${phocoa.dir}/conf/propel-conf.xml" tofile="${phocoa.propel.dir}/runtime-conf.xml">
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="LOG_DIR" value="${phocoa.project.container}/log" />
                    <token key="PHOCOA_PROJECT_NAME" value="${phocoa.project.name}" />
                    <token key="PROPEL_DATABASE" value="${propel.database}" />
                    <token key="DB_HOST" value="${db.host}" />
                    <token key="DB_NAME" value="${db.name}" />
                    <token key="DB_USER" value="${db.user}" />
                    <token key="DB_PASS" value="${db.pass}" />
                </replacetokens>
            </filterchain>
        </copy>
        <exec command="${propel.bin.propel-gen} ${phocoa.propel.dir} convert-props" passthru="true" />
        <echo message="Propel general setup complete." />
        <echo message="To complete propel integration, complete the following manual tasks:" />
        <echo message="1. Make sure that propel is available in your include_path. If not, edit webapp.conf and munge include_path." />
        <echo message="2. Add define('PROPEL_CONF', APP_ROOT . '/conf/${phocoa.project.name}-conf.php'); to your webapp.conf." />
        <echo message="3. Add Propel::init(PROPEL_CONF); to your WFWebApplicationDelegate's initialize() method." />
        <echo message="4. Edit the propel/runtime/classes/propel/om/BaseObject.php BaseObject declaration to this: 'abstract class BaseObject extends WFObject'." />
        <input propertyname="db.generate" validArgs="yes,no" defaultValue="no">If your database already exists, we can generate a PHP interface to your database objects. Does your database already exist?</input>
        <if>
            <equals arg1="${db.generate}" arg2="1" />
            <then>
                <exec command="${propel.bin.propel-gen} ${phocoa.propel.dir} creole" passthru="true" />
                <exec command="${propel.bin.propel-gen} ${phocoa.propel.dir} main" passthru="true" />
                <echo message="Propel code generation complete." />
            </then>
            <else>
                <echo message="Skipping Propel code generation. You can always generate your classes with Propel in the future:" />
                <echo message="${propel.bin.propel-gen} ${phocoa.propel.dir} main" />
            </else>
        </if>
        <echo message="Done adding Propel support." />
    </target>

    <!-- setup and config tasks -->
    <target name="httpdconf" description="Explain HTTPD setup require for phocoa." depends="prepareProject">
        <echo message="PHOCOA requires some httpd configurations to work its magic. You must either be able to edit httpd.conf, or have an apache with mod_rewrite enabled." />
        <input propertyname="phocoa.project.httpdConfMode" defaultValue="1">Select httpd configuration mode: 1=httpd.conf, 2=.htaccess</input>
        <if>
            <equals arg1="${phocoa.project.httpdConfMode}" arg2="1" />
            <then>
                <echo message="Make sure your httpd.conf file contains the line: Include ${phocoa.project.container}/${phocoa.project.name}/${phocoa.project.name}/conf/httpd.conf" />
            </then>
            <else>
                <echo message="Installing .htaccess file" />
                <move file="${phocoa.project.container}/${phocoa.project.name}/conf/.htaccess" tofile="${phocoa.project.container}/${phocoa.project.name}/${phocoa.project.name}/wwwroot/.htaccess" />
                <echo message="Setting up symlinks for www accesss" />
                <symlink source="${phocoa.project.container}/${phocoa.project.name}/wwwroot/www/docs" destination="${phocoa.dir}/docs/phpdocs" />
                <symlink source="${phocoa.project.container}/${phocoa.project.name}/wwwroot/www/framework" destination="${phocoa.dir}/wwwroot/www/framework" />
                <symlink source="${phocoa.project.container}/${phocoa.project.name}/wwwroot/www/skins" destination="${phocoa.project.container}/${phocoa.project.name}/${phocoa.project.name}/skins" />
            </else>
        </if>
    </target>

    <target name="setupProjectContainer" description="Set up the container dir for the project." depends="prepareProject">
        <!-- Create a reasonable directory structure -->
        <echo msg="Creating project container directories and setting up permissions" /> 
        <mkdir dir="${phocoa.project.container}" />
        <mkdir dir="${phocoa.project.container}/log" />
        <chmod file="${phocoa.project.container}/log" mode="777" /> 
        <mkdir dir="${phocoa.project.container}/runtime" />
        <chmod file="${phocoa.project.container}/runtime" mode="777" /> 
        <mkdir dir="${phocoa.project.container}/runtime/smarty/templates_c" />
        <chmod file="${phocoa.project.container}/runtime/smarty/templates_c" mode="777" /> 
        <echo msg="Creating project directory: ${phocoa.project.dir}" /> 
        <mkdir dir="${phocoa.project.dir}" />
    </target>

    <target name="newproject" description="Create a new project workspace." depends="prepareGeneral"> 
        <!-- Gather information -->
        <input propertyname="phocoa.project.name">Enter the name of the new project:</input>
        <input propertyname="local.containerInput" defaultValue="${phocoa.pwd}">Enter the path to create the new project in:</input>
        <realpathexpandhome propertyName="phocoa.project.container" file="${local.containerInput}/${phocoa.project.name}"/>
        <!-- since the phocoa.project.dir property is already defined (via cmd line), we must do some tricks to "update" the property since phing makes all props R/O by default -->
        <property name="phocoa.project.dir" value="${phocoa.project.container}/${phocoa.project.name}" override="true" userProperty="true" />
        <input propertyname="phocoa.project.servername" defaultValue="localhost">Enter the name of the server (ie dns name) that will host this application:</input>
        <input propertyname="phocoa.project.serverip" defaultValue="127.0.0.1">Enter the IP of the server that will host this application:</input>
        <input propertyname="phocoa.project.serverport" defaultValue="80">Enter the PORT of the server that will host this application:</input>

        <phingcall target="setupProjectContainer" />

        <!-- Copy all default files to the new project directory. -->
        <echo msg="Copying PHOCOA templates..." />
        <copy toDir="${phocoa.project.dir}">
            <fileset dir="${phocoa.dir}">
                <exclude name="**/.svn/**" />
                <include name="classes/**" />
                <include name="modules" />
                <include name="skins/**" />
                <include name="wwwroot/index.php" />
            </fileset>
        </copy>
        <mkdir dir="${phocoa.project.dir}/wwwroot/www" />

        <!-- Set up conf files -->
        <echo msg="Setting up configuration files..." />
        <copy toDir="${phocoa.project.dir}">
            <fileset dir="${phocoa.dir}">
                <exclude name="**/.svn/**" />
                <include name="conf/**" />
                <exclude name="conf/propel-conf.xml" />
            </fileset>
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="PHOCOA_BASE_DIR" value="${phocoa.dir}" />
                    <token key="PHOCOA_APP_CONTAINER_DIR" value="${phocoa.project.container}" />
                    <token key="PHOCOA_APP_DIR" value="${phocoa.project.dir}" />
                    <token key="SERVER_NAME" value="${phocoa.project.servername}" />
                    <token key="SERVER_IP" value="${phocoa.project.serverip}" />
                    <token key="SERVER_PORT" value="${phocoa.project.serverport}" />
                </replacetokens>
            </filterchain>
        </copy>

        <!-- Remind the user to set up the apache config properly. -->
        <phingcall target="httpdconf" />

        <input propertyname="local.usePropel" defaultValue="yes" validArgs="yes,no">Will this project use database access via Propel?</input>
        <if>
            <equals arg1="${local.usePropel}" arg2="1" />
            <then>
                <phingcall target="addpropel" />
            </then>
        </if>
        <echo msg="New Project setup complete." />
    </target> 

    <!-- administrative tasks for phocoa dev -->
    <!-- maybe we should have another phing build file for PHOCOA-DEV purposes with this target and others like regressions tests, etc. -->
    <!-- The ouput package.xml of this task seems to fail, maybe try PearPackageTask -->
    <target name="buildpearpackage" depends="prepareGeneral" description="Build a PEAR package of PHOCOA."> 
        <echo msg="Building PEAR package..." /> 
        <build-pear-package 
            packageFileDir="${phocoa.dir}/data"
            baseFilesDir="${phocoa.dir}"
        />
        <echo msg="PEAR package.xml file is built in ${phocoa.dir}/data/package.xml" /> 
    </target> 

</project>
