<?xml version="1.0" encoding="UTF-8"?>
<!-- NOTE:: All paths should leave off trailing slash!!! -->
<project default="newProject" name="phocoa">
    <!-- Set up tasks -->

    <!-- taskdef name="build-pear-package" classname="tasks.BuildPearPackage" /-->

    <taskdef classname="tasks.RealPathExpandHome" name="realpathexpandhome" />

    <taskdef classname="tasks.SymLink" name="symlink" />

    <taskdef classname="tasks.WriteConfFile" name="writeconffile" />

    <taskdef classname="tasks.SelectExecutable" name="selectExecutable" />

    <!-- Targets -->

    <target description="General setup for all modes." name="prepareGeneral">
        <echo message="PHOCOA framework base dir at: ${phocoa.dir}" />
    </target>

    <!-- this target should be called by all targets that expect the project to already exist. if it doesn't already exist, this target will bail. -->

    <target depends="prepareGeneral"
            description="Pre-flight for working on a PHOCOA project. Loads build.properties file."
            name="prepareProject">
        <!-- defaults if not already defined -->

        <property name="phocoa.project.dir" value="" />

        <property name="phocoa.container.dir" value="" />

        <available file="${phocoa.project.dir}" property="projectDirExists"
                   type="dir" />

        <echo message="${projectDirExists}" />

        <if>
            <equals arg1="${phocoa.project.dir}" arg2="" />

            <then>
                <fail message="phocoa.project.dir is not defined." />
            </then>

            <elseif>
                <isfalse value="projectDirExists" />

                <then>
                    <fail message="Project must already exist to run this task. No project found at ${phocoa.project.dir}." />
                </then>
            </elseif>
        </if>

        <php expression="getenv('_') ? getenv('_') : getenv('PHP_COMMAND')"
             returnProperty="phocoa.project.php" />

        <if>
            <equals arg1="${phocoa.project.php}" arg2="" />

            <then>
                <fail message="phocoa.project.php could not be determined. Please set the environment variable PHP_COMMAND to the path to your php executable." />
            </then>
        </if>

        <echo message="Using PHP: ${phocoa.project.php}" />

        <echo message="PHOCOA project dir at: ${phocoa.project.dir}" />

        <if>
            <equals arg1="${phocoa.container.dir}" arg2="" />

            <then>
                <resolvepath file="${phocoa.project.dir}/.."
                             propertyName="phocoa.project.container" />
            </then>
        </if>

        <echo message="PHOCOA project container dir at: ${phocoa.project.container}" />

        <!-- attempt to load information from a file -->

        <property file="${phocoa.project.dir}/conf/build.properties" />
    </target>

    <!-- phocoa project helper tasks -->

    <target depends="prepareProject"
            description="Create a new phocoa module in the project."
            name="createModule">
        <input propertyname="module.name">Module name:</input>

        <input propertyname="module.defaultPage">Default page [blank for
        none]:</input>

        <exec command="${phocoa.project.php} ${phocoa.dir}/framework/script/createModule.php ${module.name} ${module.defaultPage}"
              dir="${phocoa.project.dir}/modules" passthru="true" />
    </target>

    <target depends="prepareProject"
            description="Create a new phocoa page in the current module."
            name="createPage">
        <input propertyname="page.name">Page Name:</input>

        <exec command="${phocoa.project.php} ${phocoa.dir}/framework/script/createPage.php ${page.name}"
              dir="${phocoa.pwd}" passthru="true" />
    </target>

    <target depends="prepareProject"
            description="Create a test stub for phocoa classes"
            name="createTestStub">
        <input propertyname="test.name">Name of class to test:</input>

        <exec command="${phocoa.project.php} ${phocoa.dir}/framework/script/createTestStub.php ${test.name}"
              dir="${phocoa.pwd}" passthru="true" />
    </target>

    <target name="setConfFile" unless="phocoa.project.confFile">
        <echo>No phocoa.project.confFile was specified, using default of
        webapp.conf</echo>

        <property name="phocoa.project.confFile" override="true"
                  value="webapp.conf" />
    </target>

    <target depends="prepareProject,setConfFile"
            description="Create a skeleton module for editing a table from Propel."
            name="createSkeletonFromPropel">
        <input propertyname="entity.list">Which entities do you want to create
        scaffolds for?</input>

        <exec command="${phocoa.project.php} ${phocoa.dir}/framework/script/scaffold.php '${entity.list}'"
              dir="${phocoa.pwd}" passthru="true" />
    </target>

    <target depends="prepareProject"
            description="Start an interactive PHP shell bootstrapped to the current PHOCOA project."
            name="shell">
        <php expression="passthru('${phocoa.project.php} ${phocoa.dir}/framework/util/shell.php')" />
    </target>

    <!-- phocoa propel integration tasks -->

    <target depends="prepareProject"
            description="Add propel support to this project." name="addpropel">
        <echo message="NOTE: this task is only tested with Propel 1.3. If you have problems, please report them." />

        <property name="phocoa.propel.dir" userProperty="true"
                  value="${phocoa.project.dir}/propel-build" />

        <echo message="Setting up PHOCOA project for Propel in dir: ${phocoa.propel.dir}" />

        <selectExecutable name="propel-gen"
                          propertyName="propel.bin.propel-gen" />

        <mkdir dir="${phocoa.propel.dir}" />

        <input propertyname="propel.database"
        validArgs="pgsql,mysql,mssql,sqllite,ldap">Enter the database
        type:</input>

        <input propertyname="db.name">Enter the database name:</input>

        <input propertyname="db.user">Enter the database username:</input>

        <input propertyname="db.pass">Enter the database password:</input>

        <input defaultValue="localhost" propertyname="db.host">Enter the
        database host:</input>

        <property name="propel.project" userProperty="true"
                  value="${phocoa.project.name}" />

        <property name="propel.database.url" userProperty="true"
                  value="${propel.database}:user=${db.user};password=${db.pass};hostname=${db.host};dbname=${db.name}" />

        <property name="propel.database.user" userProperty="true"
                  value="${db.user}" />

        <property name="propel.database.password" userProperty="true"
                  value="${db.pass}" />

        <property name="propel.database.reverse.url" userProperty="true"
                  value="${propel.database}://${db.user}:${db.pass}@${db.host}/${db.name}" />

        <property name="propel.targetPackage" userProperty="true"
                  value="${db.name}" />

        <property name="propel.output.dir" userProperty="true"
                  value="${phocoa.propel.dir}" />

        <property name="propel.php.dir" userProperty="true"
                  value="${phocoa.project.dir}/classes" />

        <property name="propel.phpconf.dir" userProperty="true"
                  value="${phocoa.project.dir}/conf" />

        <property name="propel.sql.dir" userProperty="true"
                  value="${phocoa.propel.dir}/db/sql" />

        <property name="propel.addTimeStamp" userProperty="true" value="false" />

        <property name="propel.useDateTimeClass" userProperty="true"
                  value="true" />

        <property name="propel.dateTimeClass" userProperty="true"
                  value="WFDateTime" />

        <property name="propel.defaultTimeStampFormat" userProperty="true"
                  value="" />

        <property name="propel.autoloadCoreClasses" userProperty="true"
                  value="1" />

        <property name="propel.autoloadGeneratedClasses" userProperty="true"
                  value="1" />

        <writeconffile file="${phocoa.propel.dir}/build.properties"
                       namespace="propel" />

        <echo message="Building Propel... setup conf file, reverse engineer database, build db classes." />

        <copy file="${phocoa.dir}/conf/propel-conf.xml"
              tofile="${phocoa.propel.dir}/runtime-conf.xml">
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="LOG_DIR"
                           value="${phocoa.project.container}/log" />

                    <token key="PHOCOA_PROJECT_NAME"
                           value="${phocoa.project.name}" />

                    <token key="PROPEL_DATABASE" value="${propel.database}" />

                    <token key="DB_HOST" value="${db.host}" />

                    <token key="DB_NAME" value="${db.name}" />

                    <token key="DB_USER" value="${db.user}" />

                    <token key="DB_PASS" value="${db.pass}" />
                </replacetokens>
            </filterchain>
        </copy>

        <exec command="${propel.bin.propel-gen} ${phocoa.propel.dir} convert-conf"
              passthru="true" />

        <echo message="Propel general setup complete." />

        <echo message="To complete propel integration, complete the following manual tasks:" />

        <echo message="1. Make sure that propel is available in your include_path. If not, edit webapp.conf and munge include_path." />

        <echo message="2. Edit Propel's om/BaseObject.php BaseObject declaration to this: 'abstract class BaseObject extends WFObject'." />

        <echo message="3. Edit Propel's util/BasePeer.php BasePeer declaration to this: 'class BasePeer extends WFObject'." />

        <input defaultValue="no" propertyname="db.generate"
        validArgs="yes,no">If your database already exists, we can generate a
        PHP interface to your database objects. Does your database already
        exist?</input>

        <if>
            <equals arg1="${db.generate}" arg2="1" />

            <then>
                <exec command="${propel.bin.propel-gen} ${phocoa.propel.dir} reverse"
                      passthru="true" />

                <exec command="${propel.bin.propel-gen} ${phocoa.propel.dir} main"
                      passthru="true" />

                <echo message="Propel code generation complete." />
            </then>

            <else>
                <echo message="Skipping Propel code generation. You can always generate your classes with Propel in the future:" />

                <echo message="${propel.bin.propel-gen} ${phocoa.propel.dir} main" />
            </else>
        </if>

        <echo message="Activating propel in application delegate..." />

        <reflexive>
            <fileset dir="${phocoa.project.dir}/classes">
                <include name="MyWebApplicationDelegate.php" />
            </fileset>

            <filterchain>
                <replaceregexp>
                    <regexp pattern="\/\/Propel::init" replace="Propel::init" />
                </replaceregexp>
            </filterchain>
        </reflexive>

        <echo message="Done adding Propel support." />
    </target>

    <!-- setup and config tasks -->

    <target depends="prepareProject"
            description="Explain HTTPD setup require for phocoa."
            name="httpdconf">
        <echo message="PHOCOA requires some httpd configurations to work its magic. You must either be able to edit httpd.conf, or have an apache with mod_rewrite enabled." />

        <input defaultValue="1"
        propertyname="phocoa.project.httpdConfMode">Select httpd configuration
        mode: 1=httpd.conf, 2=.htaccess</input>

        <if>
            <equals arg1="${phocoa.project.httpdConfMode}" arg2="1" />

            <then>
                <echo message="Make sure your httpd.conf file contains the line: Include ${phocoa.project.container}/${phocoa.project.name}/${phocoa.project.name}/conf/httpd.conf" />
            </then>

            <else>
                <echo message="Installing .htaccess file" />

                <move file="${phocoa.project.dir}/conf/.htaccess"
                      tofile="${phocoa.project.dir}/wwwroot/.htaccess" />

                <echo message="Setting up symlinks for www accesss" />

                <symlink destination="${phocoa.dir}/docs/phpdocs"
                         source="${phocoa.project.container}/${phocoa.project.name}/wwwroot/www/docs" />

                <symlink destination="${phocoa.dir}/wwwroot/www/framework"
                         source="${phocoa.project.container}/${phocoa.project.name}/wwwroot/www/framework" />

                <symlink destination="${phocoa.project.container}/${phocoa.project.name}/skins"
                         source="${phocoa.project.container}/${phocoa.project.name}/wwwroot/www/skins" />
            </else>
        </if>
    </target>

    <target description="Set up the container dir for the project."
            name="setupProjectContainer">
        <!-- default -->

        <property name="phocoa.project.container" value="" />

        <!-- normally we're called from another task where things are set up; but if not, we'll prompt for it -->

        <if>
            <equals arg1="${phocoa.project.container}" arg2="" />

            <then>
                <propertyprompt defaultValue="${phocoa.pwd}/mycontainerdir"
                                promptText="Enter the full path of the container dir to set up."
                                propertyName="phocoa.project.container" />
            </then>
        </if>

        <fail message="phocoa.project.container must be defined."
              unless="phocoa.project.container" />

        <!-- Create a reasonable directory structure -->

        <echo msg="Creating project container directories and setting up permissions" />

        <mkdir dir="${phocoa.project.container}" />

        <mkdir dir="${phocoa.project.container}/log" />

        <chmod file="${phocoa.project.container}/log" mode="777" />

        <mkdir dir="${phocoa.project.container}/runtime" />

        <chmod file="${phocoa.project.container}/runtime" mode="777" />

        <mkdir dir="${phocoa.project.container}/runtime/smarty/templates_c" />

        <chmod file="${phocoa.project.container}/runtime/smarty/templates_c"
               mode="777" />

        <echo msg="Creating project directory: ${phocoa.project.dir}" />

        <mkdir dir="${phocoa.project.dir}" />
    </target>

    <target depends="prepareGeneral"
            description="Create a new project workspace." name="newProject">
        <!-- Gather information -->

        <input propertyname="phocoa.project.name">Enter the name of the new
        project:</input>

        <echo msg="The container directory for your PHOCOA project will be used to place the log, runtime, and project directories. Please be careful!" />

        <input defaultValue="${phocoa.pwd}/${phocoa.project.name}"
        propertyname="local.containerInput">Enter the path to the project
        container directory:</input>

        <realpathexpandhome file="${local.containerInput}"
                            propertyName="phocoa.project.container" />

        <!-- since the phocoa.project.dir property is already defined (via cmd line), we must do some tricks to "update" the property since phing makes all props R/O by default -->

        <property name="phocoa.project.dir" override="true"
                  userProperty="true"
                  value="${phocoa.project.container}/${phocoa.project.name}" />

        <input defaultValue="localhost"
        propertyname="phocoa.project.servername">Enter the name of the server
        (ie dns name) that will host this application:</input>

        <input defaultValue="127.0.0.1"
        propertyname="phocoa.project.serverip">Enter the IP of the server that
        will host this application:</input>

        <input defaultValue="80"
        propertyname="phocoa.project.serverport">Enter the PORT of the server
        that will host this application:</input>

        <phingcall target="setupProjectContainer" />

        <!-- Copy all default files to the new project directory. -->

        <echo msg="Copying PHOCOA templates..." />

        <copy toDir="${phocoa.project.dir}">
            <fileset dir="${phocoa.dir}">
                <exclude name="**/.svn/**" />

                <include name="classes/**" />

                <include name="skins/**" />

                <include name="wwwroot/index.php" />
            </fileset>
        </copy>

        <mkdir dir="${phocoa.project.dir}/wwwroot/www" />

        <mkdir dir="${phocoa.project.dir}/modules" />

        <!-- Set up conf files -->

        <echo msg="Setting up configuration files..." />

        <copy toDir="${phocoa.project.dir}">
            <fileset dir="${phocoa.dir}">
                <exclude name="**/.svn/**" />

                <include name="conf/**" />

                <exclude name="conf/propel-conf.xml" />
            </fileset>

            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="PHOCOA_PROJECT_NAME"
                           value="${phocoa.project.name}" />

                    <token key="PHOCOA_BASE_DIR" value="${phocoa.dir}" />

                    <token key="PHOCOA_APP_CONTAINER_DIR"
                           value="${phocoa.project.container}" />

                    <token key="PHOCOA_APP_DIR" value="${phocoa.project.dir}" />

                    <token key="SERVER_NAME"
                           value="${phocoa.project.servername}" />

                    <token key="SERVER_IP" value="${phocoa.project.serverip}" />

                    <token key="SERVER_PORT"
                           value="${phocoa.project.serverport}" />
                </replacetokens>
            </filterchain>
        </copy>

        <!-- Remind the user to set up the apache config properly. -->

        <phingcall target="httpdconf" />

        <input defaultValue="yes" propertyname="local.usePropel"
        validArgs="yes,no">Will this project use database access via
        Propel?</input>

        <if>
            <istrue value="${local.usePropel}" />

            <then>
                <phingcall target="addpropel" />
            </then>
        </if>

        <echo msg="New Project setup complete." />
    </target>

    <!-- administrative tasks for phocoa dev -->

    <!-- maybe we should have another phing build file for PHOCOA-DEV purposes with this target and others like regressions tests, etc. -->

    <!-- The ouput package.xml of this task seems to fail, maybe try PearPackageTask -->

    <target depends="prepareGeneral"
            description="Build a PEAR package of PHOCOA."
            name="buildpearpackage">
        <echo msg="Building PEAR package..." />

        <build-pear-package baseFilesDir="${phocoa.dir}"
                            packageFileDir="${phocoa.dir}/data" />

        <echo msg="PEAR package.xml file is built in ${phocoa.dir}/data/package.xml" />
    </target>
</project>
