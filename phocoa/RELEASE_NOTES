Release notes by PHOCOA version number.

Legend:
[bugfix] - Bug fix.
[new] - New feature.
[BC-break] - Backwards-compatibility may be broken. Update your code to "the new way" as noted.
[BC-deprecated] - Backwards-compatibility mode supported, but deprecated. Update your code to "the new way" as noted.

Version 0.2.5 - ??
- [BC-break] Updated the behavior of WFRequestController::WFURL to be consisent with other fuctions; now never ends in a trailing '/'.
             The BC-break is that it used to end in a trailing slash if the $page param was null; thus any use of WFURL (smarty plugin too) that doesn't pass in a $page value
             will need to be updated to add the '/' in the client code.
- [new] Add WFWebApplicationDelegate::authorizationInfoClass() callback to allow use of custom WFAuthorizationInfo subclass throughout the application.
- [new] Added WFPageDelegate::willNotRunAction($page, $params) callback to allow controller to be notified of the situation where the action method won't be run because validation failed when propagating bindings. Without this callback it was impossible to detect this situation.
- [new] phocoa commits now broadcast on twitter at @phocoa
- [new] WFYAHOO_widget_Container subclasses now all automatically eval scripts in the body. This allows for seamless use of <script> blocks in YUI modules.

Version 0.2.4 - 5/14/2009
- [BC-break] If an RPC is detected and runsIfInvalid=true then the page's ignoreErrors() will default to true. This prevents any errors from showing on the page. This is the normative use case for ServerAction, but it could cause a BC problem if anyone is using runsIfInvalid=true and expecting errors to be displayed (doubtful that this affects anyone).
- [BC-break, bugfix] You can now successfully submit forms in a WFYAHOO_widget_PhocoaDialog via normal submit now and have a proper result. Previously the result would be to show an AJAX xml response as HTML on page, rather than properly returning the repsonse page.
    An isAjax property was added to phocoa's RPC mechanism. This variable tracks whether an ajax response (ie json, xml) is requested from the client (as opposed to a full html page). This piece of additional information is critical for WFPage to know whether or not to automatically wrap errors up as AJAX and send them back to the client.
- [BC-break, bugfix] Fixes to YUI Module so that when building YUI module programmatically we always set header, body, and footer. Change buildModuleProgrammatically default to TRUE so that all containers are rendered to the document.body by default. This prevents all kinds of odd clipping problems with CSS and *shouldn't* cause problems for BC. I dont belive anyone was really relying on that behavior; I think it was just our default b/c of the set header/body/footer bug which caused headers to always show even if none was provided.
- [bugfix] Fix some bugs in the Postal Code validator.
- [new] Added __rootSkin template variable to all page templates to make it easier to use skin resources in modules that are used with WFModuleView. Without access to __rootSkin you had to add code to willRenderPage() to stuff the skin into the template to achieve this on every module where you needed access to the skin.
- [new] onEvent: x do s!:noAction now routes to WFPage's noAction handler (so that the page delegate does not *have* to have that function declared).
- [new] ServerAction now includes all RPC paramaters in the request.
- [new] Added a modifier to onEvent: x do s!:actionName (the ! means runsIfInvalid=true)
- [new] Add class attribute support to WFSelect.
- [new] Add errorCodesForKey() method to WFErrorsException to make looking for certain errors easier for test writing.
- [new] Add createTestStub phocoa task to create test stubs for PHPUnit.
- [new] Add Forgotten Password link in "login error message" as well.
- [bugfix] Fix a couple of bugs that caused .htaccess support to be broken in "newProject" runs.

Version 0.2.3 - 4/22/2009
- [new] Automatically activate the username field on the login module.
- [new] Fixtures improvements: Add support for "named objects" in to-many relationships.
- [new] Add WFFormatter smarty plugin to allow use of the PHOCOA formatting infrastructure directly in templates.
- [new] Added "class" support to WFPassword.
- Add comments
- [new] Add labelPosition property to WFCheckbox for controlling position of <label> in relation to <input>. 'left' or 'right'.
- [bugfix] Fixed bug where restoreState was getting called even if the current widget isn't on a form that was submitted. This caused side effects such as "restoring" the incorrect (uninitailized) state of WFSelectionCheckbox.
- [new] Refactor WFKeyValueValidators to take an optional 4th parameter "options" that allows extra info to be passed to built-in validators. BC-safe.

Version 0.2.2 - 3/5/2009
- minor tweaks.

Version 0.2.1 - 2/19/2008
- [BC-break] Changed the default error code for WFError to NULL from 0. I don't think anyone is relying on this.
- [BC-break] Changed the signature of WFModuleInvocation::quickModule() to mirror that of WFModule constructor. I searched all of my own projects and had no actual uses of quickModule() that would be affected by this change, but I am noting it anyway for others.
- [new] Add KVC method setValuesForKeys()
- [new] Add experimental inter-property validation mechanism, see KVC method validateObject().
- [new] Add addErrors() convenience methods to WFPage and WFWidget.
- [new] WFPage now catches WFErrorsException when thrown from action methods and automatically adds all errors to the page.
        Architecturally this is useful because it allows you to simplify your controllers by no longer having to catch errors
        and translate them to "page errors". Your models can now just throw WFErrorsException objects and you can let the magic happen.
- [new] WFErrorsException class. A specialized exception that handles arrays of the structure used by validateObject().
- [new] WFArray class, or the early beginnings of one. Right now it's just there to make it easy to simulate "prototype pluck" via:
        WFArray::arrayWithArray($arrayOfErrors)->valueForKeyPath('errorMessage')
- [new] Add support for 'class' property to WFLabel.
- [new] Add nullPlaceholder property to WFTextArea and WFLabel.
- [new] WFYAHOO_widget_Uploader now fires a 'WFYAHOO_widget_Uploader:allUploadsComplete' event when the upload is completed, allows fully on-page ajax uploading.
- [new] Add maxUploadBytes parameter to WFYAHOO_widget_Uploader.
- [new] Improve formatting of upload list for WFYAHOO_widget_Uploader; now reports per-file progress and errors.
- [new] Upgrade YUI to 2.7.0.
- [bugfix] WFYAHOO_widget_PhocoaDialog now works properly with NullPlaceholders in WFTextField and WFTextArea. WFYAHOO_widget_PhocoaDialog now allows the loaded content to execute embedded scripts before munging the focus.
- [bugfix] WFYAHOO_widget_TreeView would fail to load data that had & characters in the ID. Fixed.

Version 0.2.0 - 1/21/2009
- [BC-break] Refactor WFFixture and WFYaml. Look at new API docs if you are using these APIs in your code; the fixes are very easy.
- [new] Add preventAbandondedForm property to WFYAHOO_widget_Tab. Given the ID of a form element, this will prevent navigation to another tab with "dirty" data.
- [new] Upgrade YUI to 2.6.0.
- [new] Upgrade Prototype to 1.6.0.3
- [new] add argument passing infrastructure for Appcelerator
- [new] Add WFYAHOO_widget_TreeView option for autoExpandUntilChoices 
- [new] Add WFYAHOO_widget_TreeView function to allow reloading of entire tree
- [new] Add WFYAHOO_widget_TreeView property "queryFieldId" to allow linking a WFTextField to the tree for the purpose of making a filterable/searchable tree.
- [new] Added several new KVC methods. See the docs for details, but here are the new methods.
          valuesForKeys, valuesForKeyPaths, (static) valueForStaticKey, (static) valueForStaticKeyPath
        And optional functions for handling undefined keys: valueForUndefinedKey, (static) valueForUndefinedStaticKey.
        To use static KVC with YAML files, just set the instanceID to any valid instance, empty controllerKey, and modelKeyPath of "YourObject::staticKeyPath.key"
- [new] Add smarty JSON block plugin to make it easy to create JSON in templates with nice formatting and still pass it safely into a JS var.
- [new] Add WFSearchField widget. This is a text box with an "X" clear and "GO" buttons. Integrate with WFYAHOO_widget_TreeView.
- [new] Add WFYAHOO_widget_Carousel control.
- [new] Add expandOnClick property to WFYAHOO_widget_TreeView to make it easy to turn off the default behavior of expanding nodes when the label is clicked.
- [new] Add drag & drop feature to WFYAHOO_widget_TreeView.
- [new] Refactor WFRPC/WFAction javascript; move WFActionResponsePhocoaUIUpdater handling from WFAction to WFRPC so that it's available more broadly.
- [new] Add validatedSetValueForKey() and validatedSetValueForKeyPath() to KVC. These are simple wrapper functions that automatically call setters on valid values.
- [bugfix] With PHOCOA_DEBUG mode enabled, YUI still used yahoo-dom-event.js, since "allowRollup" seemed to override the debug setting. Now these are not rolled up and debug versions are used.
- [bugfix] Redirects caused by login requests now use the REQUEST_URI instead of just the invocation path; previously querystrings were stripped.
- [bugfix] PHOCOA.WFRPC Javascript object default target was set incorrectly. Now default target is the page delegate. Also updated docs to reflect proper syntax.
- [bugfix] PHOCOA.WFRPC was sending arguments with null Javascript values as (string) null to the backend; this has been fixed.
- [bugfix] Updated generator to no longer create widgets with id's "new" or "delete" which cause problems for javascript in IE.
- [bugfix] YUI PhocoaDialog now correctly handles fixedcenter.
- [bugfix] When a non-ajax form is submitted by PhocoaDialog, and there is an error, phocoa now properly returns an HTML response rather than an AJAX response. Essentially there was a bug in the action response handler that assumed being submitted via XHR meant you were an AJAX form submit, which isn't always true.


Version 0.1.9 - 9/28/2008
- [new] Add WFBreadCrumb infrastructure for managing breadcrumbs.
- [bugfix] WFYAHOO_widget_ColorPicker only worked if its ID was "colorpicker" due to a hard-coded reference. It's been fixed.
- [bugfix] WFYAHOO_widget_ColorPicker didn't work if used inside a form on IE due to a nested forms issue. This has been fixed.
- [new] WFYAHOO_widget_ColorPicker now has a color sample display which automatically updates if the associated text field id is changed.
- [bugfix] Fix WFYAHOO_widget_Uploader bug which caused the "continueURL" to be activated before the uploading was complete, thus cancelling some of the file uploads.

Version 0.1.8 - 9/28/2008
- [bugfix] "newProject" task now creates runtime/ and log/ directories in the correct place. Previously put them in "/".
- [new] The "addpropel" task now automatically enables the Propel::init() call in MyWebApplicationDelegate.php. This step is no longer manually required on new projects.
- bump version number

Version 0.1.7 - 9/27/2008
- [bugfix] Added htmlspecialchars to WFTextField
- [new] Add onEvent support for WFDynamic objects via setting onEvent on the prototype.
- [new] Add relative date support to all WF*DateFormatters via +++ token. Add relativeDateFormatString for controlling formatting of out-of-bounds format strings in relative mode.
- [BC-deprecated] Removed WFException::raise() which was a bad idea and not really used.
- [new] Add WFDecorator to ControllerLayer. You can now specify a "decorator" or "decorators" as class names of WFDecorator subclasses. The WFDecorator infrastructure makes
  it easy to write functions to format things for UI's without having to muddy up your model objects with UI code. 
- [BC-deprecated] All Binding Options are now described in WFBinding, not WFBindingSetup. WFBinding options are now documented in WFBinding API docs page. WFBindingSetup::WFBINDINGSETUP_PATTERN_OPTION_NAME,WFBINDINGSETUP_PATTERN_OPTION_VALUE,WFBINDINGSETUP_INSERTS_NULL_PLACEHOLDER,WFBINDINGSETUP_NULL_PLACEHOLDER will be removed in a future version.
- [new] Added WFYAHOO_widget_ColorPicker widget.
- [bugfix] If a bound value is an array, and a formatter is assigned to the binding, PHOCOA will now apply the formatter function to the elements of the array, rather than the array (which resulted in a bungled value). Useful for things like WFJumpSelect::$contentLabels.
- [new] Added a setTarget() method to WFSubmit so you can better control the method called when submitting a form.
- [new] Add minified versions of core JS files and add GZIP encoding to httpd.conf template
- [bugfix] Add support for setting any KVC property in fixtures. Previously only properties backed by the database would work.
- [new] Add PHOCOA_DEBUG mode to turn on advanced debugging for javascript, etc. Just set PHOCOA_DEBUG=1 in your URL and that session will be in debug mode for the remainder of that session. PHOCOA_DEBUG turns on debug reporting and uses non-minified Javascript files.
- [new] Refactor WFRPC to remove YUI dependency. Things are much faster now. Thanks @jwatts!
- [new] Add a magic array operator @first to get the first value from an array.
- [new] Add a WFYAHOO_widget_Uploader to wrap the YUI Uploader widget.
- [new] Complete WFMenuItemBasic; add support for additional parameters in WFYAHOO_widget_Menu. Add support for inline WFMenuItemBasic objects in nestedArrayToMenuTree

Version 0.1.6 - 8/7/2008
- [BC-break] The "onEvent: <event> do j:" syntax was updated so that it no longer stops the javascript event by default. If you want to stop the javascript event now, 
  do "this.stopEvent(event);" inside of your "j:" handler.
- [bugfix] Custom action methods on WFSubmit widgets now work in conjunction with WFForm.isAjax. Previously the "default" action name was always used even if a custom action was specified.
- [new] Added WFFixture class to handle loading of fixture data via YAML files.
- [bugfix] WFSelect now treats all values as type string, thus fixing a problem where options "" and "0" were not treated as distinct values.

Version 0.1.5 - 7/24/2008
NOTE: need to look up a better list of improvements made since 0.1.4. Not sure how...
- [new] WFSensitiveDataFormatter makes it easy to X-out parts of strings.
- [bugfix] WFSelect now works properly when using options bindings in conjunction with InsertNullPlaceholder.
- [new] Update to FCKeditor 2.6.
- [new] Update to YUI 2.5.2.

Version 0.1.4
- [new] Appcelerator integration.
- [new] Replace spyc integration with Horde/Yaml.
- [new] WFYAHOO_widget_YahooScript for including YAHOO-dependent Javascript on your pages.
- [new] Ability to have the "default page" of a module accept parameters without specifying the page name in the invocation path. Must implement module::allPages() to enable.
- [new] Added WFPostletUpload, which is a widget that offers a Java applet for bulk-uploading files to phocoa apps via drag-n-drop.
- [bugfix] Phocoa now works properly when accessed from behind proxy servers.
- [new] Added readline support to the phocoa shell, if you have it installed in your PHP. This adds history and auto-complete support, although history isn't working reliably.
- [new] Added ability to customize respondsToForms from WFSkinModuleView.
- 

Version 0.1.1
- [BC-break] WFYAHOO is now an abstract class. Some applications may have previously instantiated WFYAHOO objects to bootstrap the YUI lib. This will now break.
             To update, you should remove any WFYAHOO instances from your application and instead use the {YUI} smarty plugin, which utilizes the new YUILoader support.
- [BC-break] If you are using WFArrayController with USE_ARRAY_INDEXES_AS_ID (#arrayIndexes#), by default your array controllers will break,
             due to the new avoidsEmptySelection property, which is true by default. To fix this, either convert your array controllers
             to use ids, or set avoidsEmptySelection to false.
- [new] Ajax infrastructure has been added to PHOCOA. Refer to docs for details, as it is a big system.


======================================================
RELEASE INSTRUCTIONS
======================================================
********** BUMP bootstrap.php VERSION # **************
********** MINIFY JS: ********************************
cd phocoa
java -jar /Users/alanpinstein/Downloads/yuicompressor-2.3.5/build/yuicompressor-2.3.5.jar wwwroot/www/framework/js/phocoa.js > wwwroot/www/framework/js/phocoa-min.js
java -jar /Users/alanpinstein/Downloads/yuicompressor-2.3.5/build/yuicompressor-2.3.5.jar wwwroot/www/framework/js/yahoo-phocoa.js > wwwroot/www/framework/js/yahoo-phocoa-min.js
java -jar /Users/alanpinstein/Downloads/yuicompressor-2.3.5/build/yuicompressor-2.3.5.jar wwwroot/www/framework/js/yahoo-treeviewdd.js > wwwroot/www/framework/js/yahoo-treeviewdd-min.js
java -jar /Users/alanpinstein/Downloads/yuicompressor-2.3.5/build/yuicompressor-2.3.5.jar wwwroot/www/framework/js/prototype.js > wwwroot/www/framework/js/prototype-min.js
********** Commit, then tag release **************
svn copy file:///Users/Shared/Development/svnroot/phocoa/trunk file:///Users/Shared/Development/svnroot/phocoa/tags/release-0.2.2 -m "Version 0.2.2 release"
